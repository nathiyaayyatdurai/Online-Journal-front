{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { excludeClassName } from '../../helpers/exclude';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\n\nconst AccordionComponent = _ref => {\n  let {\n    alwaysOpen = false,\n    arrowIcon = HiChevronDown,\n    children,\n    flush = false,\n    ...props\n  } = _ref;\n  const theirProps = excludeClassName(props);\n  const [isOpen, setOpen] = useState(0);\n  const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, {\n    alwaysOpen,\n    arrowIcon,\n    flush,\n    isOpen: isOpen === i,\n    setOpen: () => setOpen(i)\n  })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n  const theme = useTheme().theme.accordion;\n  return _jsx(\"div\", {\n    className: classNames(theme.base, theme.flush[flush ? 'on' : 'off']),\n    \"data-testid\": \"flowbite-accordion\",\n    ...theirProps,\n    children: panels\n  });\n};\n\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n  Panel: AccordionPanel,\n  Title: AccordionTitle,\n  Content: AccordionContent\n});","map":{"version":3,"names":["jsx","_jsx","classNames","Children","cloneElement","useMemo","useState","HiChevronDown","excludeClassName","useTheme","AccordionContent","AccordionPanel","AccordionTitle","AccordionComponent","alwaysOpen","arrowIcon","children","flush","props","theirProps","isOpen","setOpen","panels","map","child","i","theme","accordion","className","base","displayName","Accordion","Object","assign","Panel","Title","Content"],"sources":["C:/Users/DELL/Downloads/Blog---Frontend-master/Blog---Frontend-master/node_modules/flowbite-react/lib/esm/components/Accordion/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Children, cloneElement, useMemo, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { excludeClassName } from '../../helpers/exclude';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionPanel } from './AccordionPanel';\nimport { AccordionTitle } from './AccordionTitle';\nconst AccordionComponent = ({ alwaysOpen = false, arrowIcon = HiChevronDown, children, flush = false, ...props }) => {\n    const theirProps = excludeClassName(props);\n    const [isOpen, setOpen] = useState(0);\n    const panels = useMemo(() => Children.map(children, (child, i) => cloneElement(child, { alwaysOpen, arrowIcon, flush, isOpen: isOpen === i, setOpen: () => setOpen(i) })), [alwaysOpen, arrowIcon, children, flush, isOpen]);\n    const theme = useTheme().theme.accordion;\n    return (_jsx(\"div\", { className: classNames(theme.base, theme.flush[flush ? 'on' : 'off']), \"data-testid\": \"flowbite-accordion\", ...theirProps, children: panels }));\n};\nAccordionComponent.displayName = 'Accordion';\nAccordionPanel.displayName = 'Accordion.Panel';\nAccordionTitle.displayName = 'Accordion.Title';\nAccordionContent.displayName = 'Accordion.Content';\nexport const Accordion = Object.assign(AccordionComponent, {\n    Panel: AccordionPanel,\n    Title: AccordionTitle,\n    Content: AccordionContent,\n});\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AACA,MAAMC,kBAAkB,GAAG,QAA0F;EAAA,IAAzF;IAAEC,UAAU,GAAG,KAAf;IAAsBC,SAAS,GAAGR,aAAlC;IAAiDS,QAAjD;IAA2DC,KAAK,GAAG,KAAnE;IAA0E,GAAGC;EAA7E,CAAyF;EACjH,MAAMC,UAAU,GAAGX,gBAAgB,CAACU,KAAD,CAAnC;EACA,MAAM,CAACE,MAAD,EAASC,OAAT,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAMgB,MAAM,GAAGjB,OAAO,CAAC,MAAMF,QAAQ,CAACoB,GAAT,CAAaP,QAAb,EAAuB,CAACQ,KAAD,EAAQC,CAAR,KAAcrB,YAAY,CAACoB,KAAD,EAAQ;IAAEV,UAAF;IAAcC,SAAd;IAAyBE,KAAzB;IAAgCG,MAAM,EAAEA,MAAM,KAAKK,CAAnD;IAAsDJ,OAAO,EAAE,MAAMA,OAAO,CAACI,CAAD;EAA5E,CAAR,CAAjD,CAAP,EAAqJ,CAACX,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCG,MAAzC,CAArJ,CAAtB;EACA,MAAMM,KAAK,GAAGjB,QAAQ,GAAGiB,KAAX,CAAiBC,SAA/B;EACA,OAAQ1B,IAAI,CAAC,KAAD,EAAQ;IAAE2B,SAAS,EAAE1B,UAAU,CAACwB,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACT,KAAN,CAAYA,KAAK,GAAG,IAAH,GAAU,KAA3B,CAAb,CAAvB;IAAwE,eAAe,oBAAvF;IAA6G,GAAGE,UAAhH;IAA4HH,QAAQ,EAAEM;EAAtI,CAAR,CAAZ;AACH,CAND;;AAOAT,kBAAkB,CAACiB,WAAnB,GAAiC,WAAjC;AACAnB,cAAc,CAACmB,WAAf,GAA6B,iBAA7B;AACAlB,cAAc,CAACkB,WAAf,GAA6B,iBAA7B;AACApB,gBAAgB,CAACoB,WAAjB,GAA+B,mBAA/B;AACA,OAAO,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcpB,kBAAd,EAAkC;EACvDqB,KAAK,EAAEvB,cADgD;EAEvDwB,KAAK,EAAEvB,cAFgD;EAGvDwB,OAAO,EAAE1B;AAH8C,CAAlC,CAAlB"},"metadata":{},"sourceType":"module"}