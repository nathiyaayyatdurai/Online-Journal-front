{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nexport const Flowbite = _ref => {\n  let {\n    children,\n    theme = {}\n  } = _ref;\n  const {\n    theme: customTheme = {},\n    dark,\n    usePreferences = true\n  } = theme;\n  const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n  const mergedTheme = mergeDeep(defaultTheme, customTheme);\n  useEffect(() => {\n    if (dark) {\n      if (setMode != null) {\n        setMode('dark');\n      }\n\n      if (windowExists()) {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }, [dark, setMode]);\n  const themeContextValue = useMemo(() => ({\n    theme: mergedTheme,\n    mode,\n    toggleMode\n  }), [mode, toggleMode, mergedTheme]);\n  return _jsx(ThemeContext.Provider, {\n    value: themeContextValue,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","useEffect","useMemo","mergeDeep","windowExists","defaultTheme","ThemeContext","useThemeMode","Flowbite","children","theme","customTheme","dark","usePreferences","mode","setMode","toggleMode","mergedTheme","document","documentElement","classList","add","themeContextValue","Provider","value"],"sources":["C:/Users/DELL/Downloads/Blog---Frontend-master/Blog---Frontend-master/node_modules/flowbite-react/lib/esm/components/Flowbite/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nexport const Flowbite = ({ children, theme = {} }) => {\n    const { theme: customTheme = {}, dark, usePreferences = true } = theme;\n    const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n    const mergedTheme = mergeDeep(defaultTheme, customTheme);\n    useEffect(() => {\n        if (dark) {\n            if (setMode != null) {\n                setMode('dark');\n            }\n            if (windowExists()) {\n                document.documentElement.classList.add('dark');\n            }\n        }\n    }, [dark, setMode]);\n    const themeContextValue = useMemo(() => ({\n        theme: mergedTheme,\n        mode,\n        toggleMode,\n    }), [mode, toggleMode, mergedTheme]);\n    return _jsx(ThemeContext.Provider, { value: themeContextValue, children: children });\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,gBAA3C;AACA,OAAO,MAAMC,QAAQ,GAAG,QAA8B;EAAA,IAA7B;IAAEC,QAAF;IAAYC,KAAK,GAAG;EAApB,CAA6B;EAClD,MAAM;IAAEA,KAAK,EAAEC,WAAW,GAAG,EAAvB;IAA2BC,IAA3B;IAAiCC,cAAc,GAAG;EAAlD,IAA2DH,KAAjE;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,IAA8BT,YAAY,CAACM,cAAD,CAAhD;EACA,MAAMI,WAAW,GAAGd,SAAS,CAACE,YAAD,EAAeM,WAAf,CAA7B;EACAV,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAJ,EAAU;MACN,IAAIG,OAAO,IAAI,IAAf,EAAqB;QACjBA,OAAO,CAAC,MAAD,CAAP;MACH;;MACD,IAAIX,YAAY,EAAhB,EAAoB;QAChBc,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;MACH;IACJ;EACJ,CATQ,EASN,CAACT,IAAD,EAAOG,OAAP,CATM,CAAT;EAUA,MAAMO,iBAAiB,GAAGpB,OAAO,CAAC,OAAO;IACrCQ,KAAK,EAAEO,WAD8B;IAErCH,IAFqC;IAGrCE;EAHqC,CAAP,CAAD,EAI7B,CAACF,IAAD,EAAOE,UAAP,EAAmBC,WAAnB,CAJ6B,CAAjC;EAKA,OAAOjB,IAAI,CAACM,YAAY,CAACiB,QAAd,EAAwB;IAAEC,KAAK,EAAEF,iBAAT;IAA4Bb,QAAQ,EAAEA;EAAtC,CAAxB,CAAX;AACH,CApBM"},"metadata":{},"sourceType":"module"}