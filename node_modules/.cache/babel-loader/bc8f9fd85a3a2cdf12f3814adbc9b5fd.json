{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n  return window.getComputedStyle(element);\n}\n\nvar htmlConfig = {\n  treeType: \"dom\",\n  readValueFromInstance: function (domElement, key) {\n    if (isTransformProp(key)) {\n      var defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    } else {\n      var computedStyle = getComputedStyle(domElement);\n      var value = (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n      return typeof value === \"string\" ? value.trim() : value;\n    }\n  },\n  sortNodePosition: function (a, b) {\n    /**\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\n     * to true if b preceeds a.\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  },\n  getBaseTarget: function (props, key) {\n    var _a;\n\n    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n  },\n  measureViewportBox: function (element, _a) {\n    var transformPagePoint = _a.transformPagePoint;\n    return measureViewportBox(element, transformPagePoint);\n  },\n\n  /**\n   * Reset the transform on the current Element. This is called as part\n   * of a batched process across the entire layout tree. To remove this write\n   * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n   * works\n   */\n  resetTransform: function (element, domElement, props) {\n    var transformTemplate = props.transformTemplate;\n    domElement.style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\"; // Ensure that whatever happens next, we restore our transform on the next frame\n\n    element.scheduleRender();\n  },\n  restoreTransform: function (instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n  removeValueFromRenderState: function (key, _a) {\n    var vars = _a.vars,\n        style = _a.style;\n    delete vars[key];\n    delete style[key];\n  },\n\n  /**\n   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n   * can be animated by Motion.\n   */\n  makeTargetAnimatable: function (element, _a, _b, isMounted) {\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    var transformValues = _b.transformValues;\n\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n\n    var origin = getOrigin(target, transition || {}, element);\n    /**\n     * If Framer has provided a function to convert `Color` etc value types, convert them\n     */\n\n    if (transformValues) {\n      if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n      if (target) target = transformValues(target);\n      if (origin) origin = transformValues(origin);\n    }\n\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      var parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n\n    return __assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (element, renderState, latestValues, options, props) {\n    if (element.isVisible !== undefined) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n\n    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n  },\n  render: renderHTML\n};\nvar htmlVisualElement = visualElement(htmlConfig);\nexport { getComputedStyle, htmlConfig, htmlVisualElement };","map":{"version":3,"names":["__rest","__assign","visualElement","getOrigin","checkTargetForNewValues","buildHTMLStyles","isCSSVariable","parseDomVariant","isTransformProp","scrapeMotionValuesFromProps","renderHTML","getDefaultValueType","measureViewportBox","getComputedStyle","element","window","htmlConfig","treeType","readValueFromInstance","domElement","key","defaultType","default","computedStyle","value","getPropertyValue","trim","sortNodePosition","a","b","compareDocumentPosition","getBaseTarget","props","_a","style","transformPagePoint","resetTransform","transformTemplate","transform","scheduleRender","restoreTransform","instance","mutableState","removeValueFromRenderState","vars","makeTargetAnimatable","_b","isMounted","transition","transitionEnd","target","transformValues","origin","parsed","build","renderState","latestValues","options","isVisible","undefined","visibility","render","htmlVisualElement"],"sources":["C:/Users/DELL/Downloads/Blog---Frontend-master/Blog---Frontend-master/node_modules/framer-motion/dist/es/render/html/visual-element.mjs"],"sourcesContent":["import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            var value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}