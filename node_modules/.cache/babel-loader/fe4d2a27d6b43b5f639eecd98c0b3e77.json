{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nexport const ThemeContext = createContext({\n  theme: defaultTheme\n});\nexport const ThemeProvider = _ref => {\n  let {\n    children,\n    value\n  } = _ref;\n  return _jsx(ThemeContext.Provider, {\n    value: value,\n    children: children\n  });\n};\nexport function useTheme() {\n  return useContext(ThemeContext);\n}\nexport const useThemeMode = usePreferences => {\n  if (!usePreferences) return [undefined, undefined, undefined];\n  const [mode, setMode] = useState(undefined);\n\n  const savePreference = m => localStorage.setItem('theme', m);\n\n  const toggleMode = () => {\n    if (!mode) {\n      return;\n    }\n\n    if (windowExists()) {\n      document.documentElement.classList.toggle('dark');\n    }\n\n    savePreference(mode);\n    setMode(mode == 'dark' ? 'light' : 'dark');\n  };\n\n  if (usePreferences) {\n    useEffect(() => {\n      const userPreference = windowExists() && !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const userMode = localStorage.getItem('theme') || (userPreference ? 'dark' : 'light');\n\n      if (userMode) {\n        setMode(userMode);\n      }\n    }, []);\n    useEffect(() => {\n      if (!mode) {\n        return;\n      }\n\n      savePreference(mode);\n\n      if (!windowExists()) {\n        return;\n      }\n\n      if (mode != 'dark') {\n        document.documentElement.classList.remove('dark');\n      } else {\n        document.documentElement.classList.add('dark');\n      }\n    }, [mode]);\n  }\n\n  return [mode, setMode, toggleMode];\n};","map":{"version":3,"names":["jsx","_jsx","createContext","useContext","useEffect","useState","windowExists","defaultTheme","ThemeContext","theme","ThemeProvider","children","value","Provider","useTheme","useThemeMode","usePreferences","undefined","mode","setMode","savePreference","m","localStorage","setItem","toggleMode","document","documentElement","classList","toggle","userPreference","window","matchMedia","matches","userMode","getItem","remove","add"],"sources":["C:/Users/DELL/Downloads/Blog---Frontend-master/Blog---Frontend-master/node_modules/flowbite-react/lib/esm/components/Flowbite/ThemeContext.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nexport const ThemeContext = createContext({\n    theme: defaultTheme,\n});\nexport const ThemeProvider = ({ children, value }) => {\n    return _jsx(ThemeContext.Provider, { value: value, children: children });\n};\nexport function useTheme() {\n    return useContext(ThemeContext);\n}\nexport const useThemeMode = (usePreferences) => {\n    if (!usePreferences)\n        return [undefined, undefined, undefined];\n    const [mode, setMode] = useState(undefined);\n    const savePreference = (m) => localStorage.setItem('theme', m);\n    const toggleMode = () => {\n        if (!mode) {\n            return;\n        }\n        if (windowExists()) {\n            document.documentElement.classList.toggle('dark');\n        }\n        savePreference(mode);\n        setMode(mode == 'dark' ? 'light' : 'dark');\n    };\n    if (usePreferences) {\n        useEffect(() => {\n            const userPreference = windowExists() && !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n            const userMode = localStorage.getItem('theme') || (userPreference ? 'dark' : 'light');\n            if (userMode) {\n                setMode(userMode);\n            }\n        }, []);\n        useEffect(() => {\n            if (!mode) {\n                return;\n            }\n            savePreference(mode);\n            if (!windowExists()) {\n                return;\n            }\n            if (mode != 'dark') {\n                document.documentElement.classList.remove('dark');\n            }\n            else {\n                document.documentElement.classList.add('dark');\n            }\n        }, [mode]);\n    }\n    return [mode, setMode, toggleMode];\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,MAAMC,YAAY,GAAGN,aAAa,CAAC;EACtCO,KAAK,EAAEF;AAD+B,CAAD,CAAlC;AAGP,OAAO,MAAMG,aAAa,GAAG,QAAyB;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAClD,OAAOX,IAAI,CAACO,YAAY,CAACK,QAAd,EAAwB;IAAED,KAAK,EAAEA,KAAT;IAAgBD,QAAQ,EAAEA;EAA1B,CAAxB,CAAX;AACH,CAFM;AAGP,OAAO,SAASG,QAAT,GAAoB;EACvB,OAAOX,UAAU,CAACK,YAAD,CAAjB;AACH;AACD,OAAO,MAAMO,YAAY,GAAIC,cAAD,IAAoB;EAC5C,IAAI,CAACA,cAAL,EACI,OAAO,CAACC,SAAD,EAAYA,SAAZ,EAAuBA,SAAvB,CAAP;EACJ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACY,SAAD,CAAhC;;EACA,MAAMG,cAAc,GAAIC,CAAD,IAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,CAA9B,CAA9B;;EACA,MAAMG,UAAU,GAAG,MAAM;IACrB,IAAI,CAACN,IAAL,EAAW;MACP;IACH;;IACD,IAAIZ,YAAY,EAAhB,EAAoB;MAChBmB,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,MAA1C;IACH;;IACDR,cAAc,CAACF,IAAD,CAAd;IACAC,OAAO,CAACD,IAAI,IAAI,MAAR,GAAiB,OAAjB,GAA2B,MAA5B,CAAP;EACH,CATD;;EAUA,IAAIF,cAAJ,EAAoB;IAChBZ,SAAS,CAAC,MAAM;MACZ,MAAMyB,cAAc,GAAGvB,YAAY,MAAM,CAAC,CAACwB,MAAM,CAACC,UAA3B,IAAyCD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAlH;MACA,MAAMC,QAAQ,GAAGX,YAAY,CAACY,OAAb,CAAqB,OAArB,MAAkCL,cAAc,GAAG,MAAH,GAAY,OAA5D,CAAjB;;MACA,IAAII,QAAJ,EAAc;QACVd,OAAO,CAACc,QAAD,CAAP;MACH;IACJ,CANQ,EAMN,EANM,CAAT;IAOA7B,SAAS,CAAC,MAAM;MACZ,IAAI,CAACc,IAAL,EAAW;QACP;MACH;;MACDE,cAAc,CAACF,IAAD,CAAd;;MACA,IAAI,CAACZ,YAAY,EAAjB,EAAqB;QACjB;MACH;;MACD,IAAIY,IAAI,IAAI,MAAZ,EAAoB;QAChBO,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCQ,MAAnC,CAA0C,MAA1C;MACH,CAFD,MAGK;QACDV,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCS,GAAnC,CAAuC,MAAvC;MACH;IACJ,CAdQ,EAcN,CAAClB,IAAD,CAdM,CAAT;EAeH;;EACD,OAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBK,UAAhB,CAAP;AACH,CAxCM"},"metadata":{},"sourceType":"module"}